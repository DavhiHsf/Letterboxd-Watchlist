from pymongo import MongoClient
import requests
import re
from datetime import datetime
import random
import time

client = MongoClient("mongodb://SEU_HOST:SUA_PORTA/")
db = client['SEU_BANCO']
collection = db['SUA_COLECAO']

api_key = 'SUA_CHAVE' 
base_url = 'https://api.themoviedb.org/3/'

# ////////////////////////////////////////////

def buscar_filme_id(filme_id):
    endpoint = f'{base_url}movie/{filme_id}?api_key={api_key}&language=pt-BR'
    response = requests.get(endpoint)

    if response.status_code == 200:
        movie_data = response.json()

        return {
            'title': movie_data.get('title', 'T√≠tulo n√£o dispon√≠vel.'),
            'runtime': movie_data.get('runtime', 'Dura√ß√£o n√£o dispon√≠vel.'),
            'genres': movie_data.get('genres', []),
            'credits': movie_data.get('credits', {}).get('cast', [])[:10],
            'overview': movie_data.get('overview', 'Sinopse n√£o dispon√≠vel.'),
            'release_date': movie_data.get('release_date', 'Data de lan√ßamento n√£o dispon√≠vel.'),
            'original_title': movie_data.get('original_title', 'T√≠tulo original n√£o dispon√≠vel.'),
            'vote_average': movie_data.get('vote_average', 'Avalia√ß√£o m√©dia n√£o dispon√≠vel.'),

        }
    
    else:
        print(f'Erro ao acessar a API: {response.status_code}')
        return None
    
# ////////////////////////////////////////////
    
def buscar_filme_por_nome(nome_filme):
    endpoint = f'{base_url}search/movie?api_key={api_key}&language=pt-BR&query={nome_filme}'
    response = requests.get(endpoint)

    if response.status_code == 200:
        return response.json().get('results', [])
    
    else:
        print(f'Erro ao acessar a API: {response.status_code}')
        return []
    
# ////////////////////////////////////////////
    
def adicionar_filme():
    while True:
        print(f'\n1. Adicionar filme pelo t√≠tulo.')
        print('2. Adicionar filme pelo ID.')
        print('3. Menu Principal.')
        opcao = input('\nEscolha uma op√ß√£o: ')

        if opcao == '1':
            nome_filme = input('Digite o nome do filme: ')
            filmes_encontrados = buscar_filme_por_nome(nome_filme)

            if not filmes_encontrados:
                print(f"Nenhum filme encontrado com o nome '{nome_filme}'.")
                continue

            print('Filmes encontrados:')
            for idx, filme in enumerate(filmes_encontrados):

                data_lancamento = filme['release_date']
                ano_lancamento = "Ano n√£o dispon√≠vel."
                if data_lancamento:
                    try:
                        data_obj = datetime.strptime(data_lancamento, '%Y-%m-%d')
                        ano_lancamento = data_obj.strftime('%Y')
                    except ValueError:
                        ano_lancamento = "Data de lan√ßamento inv√°lida."

                print(f"{idx + 1}. ({filme['title']} - {ano_lancamento}) (ID: {filme['id']})")

            escolha = int(input('Escolha o n√∫mero do filme que deseja adicionar: ')) - 1

            if 0 <= escolha < len(filmes_encontrados):
                filme_id = filmes_encontrados[escolha]['id']

        elif opcao == '2':
            filme_id = input('Digite o ID do filme: ')

        elif opcao == '3':
            break

        else:
            print('\nOp√ß√£o inv√°lida. Tente Novamente.\n')
            continue

        filme = buscar_filme_id(filme_id)

        if filme:
            print(f"\nVoc√™ realmente quer adicionar {filme['title']} na sua watchlist?")

            while True:
                print(f"\n1. Sim, adicione {filme['title']} na minha watchlist.")
                print('2. N√£o, n√£o adicione na minha watchlist.')
                opcao = input('\nEscolha uma op√ß√£o: ')

                if opcao == '1':
                    collection.insert_one(filme)
                    print(f"O filme '{filme['title']}' foi adicionado √† sua watchlist.\n")
                    print('O que deseja agora?')
                    break

                elif opcao == '2':
                    print('Filme n√£o adicionado √† watchlist.\n')
                    break

                else:
                    print('Op√ß√£o inv√°lida. Tente Novamente. \n')
    
        else:
            print('N√£o foi poss√≠vel encontrar o filme.')
            
# ////////////////////////////////////////////

def excluir_filme(titulo):
    regex_titulo = re.compile(f'^{re.escape(titulo)}$', re.IGNORECASE)
    resultado = collection.delete_one({'title': regex_titulo})

    if resultado.deleted_count > 0:
        print(f'\nO filme "{titulo}" foi removido da sua watchlist.\n')
    else:
        print(f'\nO filme "{titulo}" n√£o foi encontrado na watchlist.\n')

# ////////////////////////////////////////////

def recomendar_filme():
    filmes = list(collection.find())

    if not filmes:
        print('Sua watchlist est√° vazia. Adicione filmes para receber recomenda√ß√µes!')
        return

    filme_recomendado = random.choice(filmes)

    print("\nEscolhendo um filme para recomendar...")
    for i in range(3, 0, -1):
        print(f"{i}...")
        time.sleep(1)

    print('\nüé¨ Filme Recomendado: üé¨')
    print(f'\nT√≠tulo: {filme_recomendado.get("title", "T√≠tulo n√£o dispon√≠vel.")}')
    print("-" * 15)
    print(f'Dura√ß√£o: {filme_recomendado.get("runtime", "Dura√ß√£o n√£o dispon√≠vel.")} minutos.')
    print("-" * 15)
    if isinstance(filme_recomendado.get("genres"), list):
        generos = [genero['name'] for genero in filme_recomendado['genres']]
        print(f'G√™neros do filme: {", ".join(generos)}')
    else:
        print('G√™neros n√£o dispon√≠veis.')
    print("-" * 15)
    print(f'Sinopse: {filme_recomendado.get("overview", "Sinopse n√£o dispon√≠vel.")}')
    print("-" * 15)
    print(f'Data de lan√ßamento: {filme_recomendado.get("release_date", "Data de lan√ßamento n√£o dispon√≠vel.")}')
    print("-" * 15)
    print(f'T√≠tulo original: {filme_recomendado.get("original_title", "T√≠tulo original n√£o dispon√≠vel.")}')
    print("-" * 15)
    print(f'Avalia√ß√£o m√©dia: {float(filme_recomendado.get("vote_average", 0)):.1f}')
    print("-" * 30, "\n")

# ////////////////////////////////////////////

def exibir_watchlist():
    filmes = collection.find()
    if collection.count_documents({}) == 0:
        print('\nSua watchlist est√° vazia. \n')
        return

    else:
        print("\nWatchlist: \n")
        for filme in filmes:
            print(f'T√≠tulo: {filme.get("title", "T√≠tulo n√£o dispon√≠vel.")}')
            print("-" * 15)
            print(f'Dura√ß√£o: {filme.get("runtime", "Dura√ß√£o n√£o dispon√≠vel.")} minutos.')
            print("-" * 15)

            if isinstance(filme.get("genres"), list):
                generos = [genero['name'] for genero in filme['genres']]
                print(f'G√™neros do filme: {", ".join(generos)}')
            else:
                print('G√™neros n√£o dispon√≠veis.')
            print("-" * 15)

            # elenco = filme.get("credits", [])
            # if isinstance(elenco, dict) and "cast" in elenco:
            #     elenco = elenco["cast"]
            # else:
            #     elenco = [] 
            # print(f'Elenco: {", ".join([actor["name"] for actor in elenco[:10]])}')
            # print("-" * 15)

            print(f'Sinopse: {filme.get("overview", "Sinopse n√£o dispon√≠vel.")}')
            print("-" * 15)
            print(f'Data de lan√ßamento: {filme.get("release_date", "Data de lan√ßamento n√£o dispon√≠vel.")}')
            print("-" * 15)
            print(f'T√≠tulo original: {filme.get("original_title", "T√≠tulo original n√£o dispon√≠vel.")}')
            print("-" * 15)
            print(f'Avalia√ß√£o m√©dia: {float(filme.get("vote_average", 0)):.1f}')
            print("-" * 30, "\n")

# ////////////////////////////////////////////

def menu():
    while True:
        print('\nüé¨ Letterboxd Watchlist em Python üêç')
        print('-' * 36)
        print('\n1. Consultar a watchlist.')
        print('2. Recomendar um filme da watchlist.')
        print('3. Adicionar um filme √† watchlist.')
        print('4. Remover um filme da watchlist.')
        print('5. Sair.')
        opcao = input('\nEscolha uma op√ß√£o: ')

        if opcao == '1':
            exibir_watchlist()

        elif opcao == '2':
            recomendar_filme()

        elif opcao == '3':
            adicionar_filme()
        
        elif opcao == '4':
            titulo = input('Digite o t√≠tulo do filme que deseja remover: ')
            excluir_filme(titulo)

        elif opcao == '5':
            print('\nOpera√ß√£o cancelada. At√© logo üëãüëãüëã')
            break

        else:
            print('Op√ß√£o inv√°lida. Tente Novamente. \n')

menu()



